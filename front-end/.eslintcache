[{"C:\\Users\\Pessoal\\Desktop\\Clone Interface\\netflix\\net\\front-end\\src\\index.js":"1","C:\\Users\\Pessoal\\Desktop\\Clone Interface\\netflix\\net\\front-end\\src\\App.js":"2","C:\\Users\\Pessoal\\Desktop\\Clone Interface\\netflix\\net\\front-end\\src\\Tmdb.js":"3","C:\\Users\\Pessoal\\Desktop\\Clone Interface\\netflix\\net\\front-end\\src\\components\\MovieRow\\index.js":"4","C:\\Users\\Pessoal\\Desktop\\Clone Interface\\netflix\\net\\front-end\\src\\components\\FeaturedMovie\\index.js":"5","C:\\Users\\Pessoal\\Desktop\\Clone Interface\\netflix\\net\\front-end\\src\\components\\Header\\index.js":"6"},{"size":200,"mtime":1610858941122,"results":"7","hashOfConfig":"8"},{"size":2302,"mtime":1610945807124,"results":"9","hashOfConfig":"8"},{"size":2632,"mtime":1610946554569,"results":"10","hashOfConfig":"8"},{"size":1812,"mtime":1610946146847,"results":"11","hashOfConfig":"8"},{"size":2014,"mtime":1610943876423,"results":"12","hashOfConfig":"8"},{"size":627,"mtime":1610914056450,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"gmc5rl",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\Pessoal\\Desktop\\Clone Interface\\netflix\\net\\front-end\\src\\index.js",[],["29","30"],"C:\\Users\\Pessoal\\Desktop\\Clone Interface\\netflix\\net\\front-end\\src\\App.js",[],"C:\\Users\\Pessoal\\Desktop\\Clone Interface\\netflix\\net\\front-end\\src\\Tmdb.js",["31"],"const API_KEY = 'e2efa7a08a4fe36bdb6d34acdb8cebb7';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n\r\n\r\nconst basicFecth = async (endpoint)=>{\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\n\r\nexport default {\r\n    getHomeList: async () =>{\r\n        return [\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFecth(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para você',\r\n                items: await basicFecth(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'toprated',\r\n                title:'Em alta',\r\n                items: await basicFecth(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'action',\r\n                title:'Ação',\r\n                items: await basicFecth(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'comedy',\r\n                title:'Comédia',\r\n                items: await basicFecth(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'horror',\r\n                title:'Terror',\r\n                items: await basicFecth(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'romance',\r\n                title:'Romance',\r\n                items: await basicFecth(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug:'documentary',\r\n                title:'Documentários',\r\n                items: await basicFecth(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ]\r\n    },\r\n    getMovieInfo: async (movieId, type) =>{\r\n        let info = {};\r\n\r\n            if(movieId){\r\n                switch(type){\r\n                    case 'movie':\r\n                            info = await basicFecth(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                        break;\r\n                    case 'tv':\r\n                            info = await basicFecth(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\r\n                    break;    \r\n                    default: \r\n                    info =null;\r\n                }\r\n            }\r\n\r\n        return info;\r\n    }\r\n}","C:\\Users\\Pessoal\\Desktop\\Clone Interface\\netflix\\net\\front-end\\src\\components\\MovieRow\\index.js",["32"],"import { NavigationOutlined } from '@material-ui/icons';\nimport React, { useState } from 'react';\nimport './style.css';\n\nimport KeyboardArrowLeftIcon from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\n\n export default function MovieRow({title, items}) {\n\n    const [scrollX, setScrollX] = useState(-400);\n\n\n    function handleLeftArrow() {\n         let x = scrollX + Math.round(window.innerWidth / 2);\n         if (x > 0) {\n             x = 0;\n         }\n         setScrollX(x);\n     }\n\n    const handleRightArrow = () =>{\n        let x = scrollX - Math.round(window.innerWidth / 2);\n        let listW = items.results.length * 150;\n        if((window.innerWidth - listW) > x){\n            x = (window.innerWidth - listW) - 60;\n        }\n\n        setScrollX(x)\n    }\n\n\n  return (\n      <div className=\"movieRow\">\n          <h2>{title}</h2>\n            <div className=\"movieRow--left\" onClick={handleLeftArrow}>\n              <KeyboardArrowLeftIcon style={{fontSize:50}} />\n            </div>\n            <div className=\"movieRow--right\" onClick={handleRightArrow} >\n              <KeyboardArrowRightIcon style={{fontSize:50}}/>\n            </div>\n\n          <div className=\"movieRow--listarea\">\n              <div className=\"movieRow--list\" style={{\n                  marginLeft: scrollX,\n                  width: items.results.length * 150\n              }}>\n                  {items.results.length > 0 && items.results.map((item, key)=>(\n                      <div key={key} className=\"movieRow--item\">\n                         <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}/>\n                      </div>\n                  ))} \n              </div>\n          </div>\n      </div>\n      \n  );\n  \n}\n\n\n","C:\\Users\\Pessoal\\Desktop\\Clone Interface\\netflix\\net\\front-end\\src\\components\\FeaturedMovie\\index.js",[],"C:\\Users\\Pessoal\\Desktop\\Clone Interface\\netflix\\net\\front-end\\src\\components\\Header\\index.js",[],{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","severity":1,"message":"38","line":13,"column":1,"nodeType":"39","endLine":76,"endColumn":2},{"ruleId":"40","severity":1,"message":"41","line":1,"column":10,"nodeType":"42","messageId":"43","endLine":1,"endColumn":28},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'NavigationOutlined' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]